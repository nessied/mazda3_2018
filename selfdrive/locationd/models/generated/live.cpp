#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8093280458722028871) {
   out_8093280458722028871[0] = 0;
   out_8093280458722028871[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8093280458722028871[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8093280458722028871[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8093280458722028871[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8093280458722028871[5] = -sin(in_vec[1]);
   out_8093280458722028871[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8093280458722028871[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8093280458722028871[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8093280458722028871[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8093280458722028871[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8093280458722028871[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8093280458722028871[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8093280458722028871[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8093280458722028871[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8093280458722028871[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8093280458722028871[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8093280458722028871[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2329582857333837057) {
   out_2329582857333837057[0] = delta_x[0] + nom_x[0];
   out_2329582857333837057[1] = delta_x[1] + nom_x[1];
   out_2329582857333837057[2] = delta_x[2] + nom_x[2];
   out_2329582857333837057[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2329582857333837057[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2329582857333837057[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2329582857333837057[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2329582857333837057[7] = delta_x[6] + nom_x[7];
   out_2329582857333837057[8] = delta_x[7] + nom_x[8];
   out_2329582857333837057[9] = delta_x[8] + nom_x[9];
   out_2329582857333837057[10] = delta_x[9] + nom_x[10];
   out_2329582857333837057[11] = delta_x[10] + nom_x[11];
   out_2329582857333837057[12] = delta_x[11] + nom_x[12];
   out_2329582857333837057[13] = delta_x[12] + nom_x[13];
   out_2329582857333837057[14] = delta_x[13] + nom_x[14];
   out_2329582857333837057[15] = delta_x[14] + nom_x[15];
   out_2329582857333837057[16] = delta_x[15] + nom_x[16];
   out_2329582857333837057[17] = delta_x[16] + nom_x[17];
   out_2329582857333837057[18] = delta_x[17] + nom_x[18];
   out_2329582857333837057[19] = delta_x[18] + nom_x[19];
   out_2329582857333837057[20] = delta_x[19] + nom_x[20];
   out_2329582857333837057[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4575116125226568338) {
   out_4575116125226568338[0] = -nom_x[0] + true_x[0];
   out_4575116125226568338[1] = -nom_x[1] + true_x[1];
   out_4575116125226568338[2] = -nom_x[2] + true_x[2];
   out_4575116125226568338[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4575116125226568338[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4575116125226568338[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4575116125226568338[6] = -nom_x[7] + true_x[7];
   out_4575116125226568338[7] = -nom_x[8] + true_x[8];
   out_4575116125226568338[8] = -nom_x[9] + true_x[9];
   out_4575116125226568338[9] = -nom_x[10] + true_x[10];
   out_4575116125226568338[10] = -nom_x[11] + true_x[11];
   out_4575116125226568338[11] = -nom_x[12] + true_x[12];
   out_4575116125226568338[12] = -nom_x[13] + true_x[13];
   out_4575116125226568338[13] = -nom_x[14] + true_x[14];
   out_4575116125226568338[14] = -nom_x[15] + true_x[15];
   out_4575116125226568338[15] = -nom_x[16] + true_x[16];
   out_4575116125226568338[16] = -nom_x[17] + true_x[17];
   out_4575116125226568338[17] = -nom_x[18] + true_x[18];
   out_4575116125226568338[18] = -nom_x[19] + true_x[19];
   out_4575116125226568338[19] = -nom_x[20] + true_x[20];
   out_4575116125226568338[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3554337354835071978) {
   out_3554337354835071978[0] = 1.0;
   out_3554337354835071978[1] = 0;
   out_3554337354835071978[2] = 0;
   out_3554337354835071978[3] = 0;
   out_3554337354835071978[4] = 0;
   out_3554337354835071978[5] = 0;
   out_3554337354835071978[6] = 0;
   out_3554337354835071978[7] = 0;
   out_3554337354835071978[8] = 0;
   out_3554337354835071978[9] = 0;
   out_3554337354835071978[10] = 0;
   out_3554337354835071978[11] = 0;
   out_3554337354835071978[12] = 0;
   out_3554337354835071978[13] = 0;
   out_3554337354835071978[14] = 0;
   out_3554337354835071978[15] = 0;
   out_3554337354835071978[16] = 0;
   out_3554337354835071978[17] = 0;
   out_3554337354835071978[18] = 0;
   out_3554337354835071978[19] = 0;
   out_3554337354835071978[20] = 0;
   out_3554337354835071978[21] = 0;
   out_3554337354835071978[22] = 1.0;
   out_3554337354835071978[23] = 0;
   out_3554337354835071978[24] = 0;
   out_3554337354835071978[25] = 0;
   out_3554337354835071978[26] = 0;
   out_3554337354835071978[27] = 0;
   out_3554337354835071978[28] = 0;
   out_3554337354835071978[29] = 0;
   out_3554337354835071978[30] = 0;
   out_3554337354835071978[31] = 0;
   out_3554337354835071978[32] = 0;
   out_3554337354835071978[33] = 0;
   out_3554337354835071978[34] = 0;
   out_3554337354835071978[35] = 0;
   out_3554337354835071978[36] = 0;
   out_3554337354835071978[37] = 0;
   out_3554337354835071978[38] = 0;
   out_3554337354835071978[39] = 0;
   out_3554337354835071978[40] = 0;
   out_3554337354835071978[41] = 0;
   out_3554337354835071978[42] = 0;
   out_3554337354835071978[43] = 0;
   out_3554337354835071978[44] = 1.0;
   out_3554337354835071978[45] = 0;
   out_3554337354835071978[46] = 0;
   out_3554337354835071978[47] = 0;
   out_3554337354835071978[48] = 0;
   out_3554337354835071978[49] = 0;
   out_3554337354835071978[50] = 0;
   out_3554337354835071978[51] = 0;
   out_3554337354835071978[52] = 0;
   out_3554337354835071978[53] = 0;
   out_3554337354835071978[54] = 0;
   out_3554337354835071978[55] = 0;
   out_3554337354835071978[56] = 0;
   out_3554337354835071978[57] = 0;
   out_3554337354835071978[58] = 0;
   out_3554337354835071978[59] = 0;
   out_3554337354835071978[60] = 0;
   out_3554337354835071978[61] = 0;
   out_3554337354835071978[62] = 0;
   out_3554337354835071978[63] = 0;
   out_3554337354835071978[64] = 0;
   out_3554337354835071978[65] = 0;
   out_3554337354835071978[66] = -0.5*state[4];
   out_3554337354835071978[67] = -0.5*state[5];
   out_3554337354835071978[68] = -0.5*state[6];
   out_3554337354835071978[69] = 0;
   out_3554337354835071978[70] = 0;
   out_3554337354835071978[71] = 0;
   out_3554337354835071978[72] = 0;
   out_3554337354835071978[73] = 0;
   out_3554337354835071978[74] = 0;
   out_3554337354835071978[75] = 0;
   out_3554337354835071978[76] = 0;
   out_3554337354835071978[77] = 0;
   out_3554337354835071978[78] = 0;
   out_3554337354835071978[79] = 0;
   out_3554337354835071978[80] = 0;
   out_3554337354835071978[81] = 0;
   out_3554337354835071978[82] = 0;
   out_3554337354835071978[83] = 0;
   out_3554337354835071978[84] = 0;
   out_3554337354835071978[85] = 0;
   out_3554337354835071978[86] = 0;
   out_3554337354835071978[87] = 0.5*state[3];
   out_3554337354835071978[88] = 0.5*state[6];
   out_3554337354835071978[89] = -0.5*state[5];
   out_3554337354835071978[90] = 0;
   out_3554337354835071978[91] = 0;
   out_3554337354835071978[92] = 0;
   out_3554337354835071978[93] = 0;
   out_3554337354835071978[94] = 0;
   out_3554337354835071978[95] = 0;
   out_3554337354835071978[96] = 0;
   out_3554337354835071978[97] = 0;
   out_3554337354835071978[98] = 0;
   out_3554337354835071978[99] = 0;
   out_3554337354835071978[100] = 0;
   out_3554337354835071978[101] = 0;
   out_3554337354835071978[102] = 0;
   out_3554337354835071978[103] = 0;
   out_3554337354835071978[104] = 0;
   out_3554337354835071978[105] = 0;
   out_3554337354835071978[106] = 0;
   out_3554337354835071978[107] = 0;
   out_3554337354835071978[108] = -0.5*state[6];
   out_3554337354835071978[109] = 0.5*state[3];
   out_3554337354835071978[110] = 0.5*state[4];
   out_3554337354835071978[111] = 0;
   out_3554337354835071978[112] = 0;
   out_3554337354835071978[113] = 0;
   out_3554337354835071978[114] = 0;
   out_3554337354835071978[115] = 0;
   out_3554337354835071978[116] = 0;
   out_3554337354835071978[117] = 0;
   out_3554337354835071978[118] = 0;
   out_3554337354835071978[119] = 0;
   out_3554337354835071978[120] = 0;
   out_3554337354835071978[121] = 0;
   out_3554337354835071978[122] = 0;
   out_3554337354835071978[123] = 0;
   out_3554337354835071978[124] = 0;
   out_3554337354835071978[125] = 0;
   out_3554337354835071978[126] = 0;
   out_3554337354835071978[127] = 0;
   out_3554337354835071978[128] = 0;
   out_3554337354835071978[129] = 0.5*state[5];
   out_3554337354835071978[130] = -0.5*state[4];
   out_3554337354835071978[131] = 0.5*state[3];
   out_3554337354835071978[132] = 0;
   out_3554337354835071978[133] = 0;
   out_3554337354835071978[134] = 0;
   out_3554337354835071978[135] = 0;
   out_3554337354835071978[136] = 0;
   out_3554337354835071978[137] = 0;
   out_3554337354835071978[138] = 0;
   out_3554337354835071978[139] = 0;
   out_3554337354835071978[140] = 0;
   out_3554337354835071978[141] = 0;
   out_3554337354835071978[142] = 0;
   out_3554337354835071978[143] = 0;
   out_3554337354835071978[144] = 0;
   out_3554337354835071978[145] = 0;
   out_3554337354835071978[146] = 0;
   out_3554337354835071978[147] = 0;
   out_3554337354835071978[148] = 0;
   out_3554337354835071978[149] = 0;
   out_3554337354835071978[150] = 0;
   out_3554337354835071978[151] = 0;
   out_3554337354835071978[152] = 0;
   out_3554337354835071978[153] = 1.0;
   out_3554337354835071978[154] = 0;
   out_3554337354835071978[155] = 0;
   out_3554337354835071978[156] = 0;
   out_3554337354835071978[157] = 0;
   out_3554337354835071978[158] = 0;
   out_3554337354835071978[159] = 0;
   out_3554337354835071978[160] = 0;
   out_3554337354835071978[161] = 0;
   out_3554337354835071978[162] = 0;
   out_3554337354835071978[163] = 0;
   out_3554337354835071978[164] = 0;
   out_3554337354835071978[165] = 0;
   out_3554337354835071978[166] = 0;
   out_3554337354835071978[167] = 0;
   out_3554337354835071978[168] = 0;
   out_3554337354835071978[169] = 0;
   out_3554337354835071978[170] = 0;
   out_3554337354835071978[171] = 0;
   out_3554337354835071978[172] = 0;
   out_3554337354835071978[173] = 0;
   out_3554337354835071978[174] = 0;
   out_3554337354835071978[175] = 1.0;
   out_3554337354835071978[176] = 0;
   out_3554337354835071978[177] = 0;
   out_3554337354835071978[178] = 0;
   out_3554337354835071978[179] = 0;
   out_3554337354835071978[180] = 0;
   out_3554337354835071978[181] = 0;
   out_3554337354835071978[182] = 0;
   out_3554337354835071978[183] = 0;
   out_3554337354835071978[184] = 0;
   out_3554337354835071978[185] = 0;
   out_3554337354835071978[186] = 0;
   out_3554337354835071978[187] = 0;
   out_3554337354835071978[188] = 0;
   out_3554337354835071978[189] = 0;
   out_3554337354835071978[190] = 0;
   out_3554337354835071978[191] = 0;
   out_3554337354835071978[192] = 0;
   out_3554337354835071978[193] = 0;
   out_3554337354835071978[194] = 0;
   out_3554337354835071978[195] = 0;
   out_3554337354835071978[196] = 0;
   out_3554337354835071978[197] = 1.0;
   out_3554337354835071978[198] = 0;
   out_3554337354835071978[199] = 0;
   out_3554337354835071978[200] = 0;
   out_3554337354835071978[201] = 0;
   out_3554337354835071978[202] = 0;
   out_3554337354835071978[203] = 0;
   out_3554337354835071978[204] = 0;
   out_3554337354835071978[205] = 0;
   out_3554337354835071978[206] = 0;
   out_3554337354835071978[207] = 0;
   out_3554337354835071978[208] = 0;
   out_3554337354835071978[209] = 0;
   out_3554337354835071978[210] = 0;
   out_3554337354835071978[211] = 0;
   out_3554337354835071978[212] = 0;
   out_3554337354835071978[213] = 0;
   out_3554337354835071978[214] = 0;
   out_3554337354835071978[215] = 0;
   out_3554337354835071978[216] = 0;
   out_3554337354835071978[217] = 0;
   out_3554337354835071978[218] = 0;
   out_3554337354835071978[219] = 1.0;
   out_3554337354835071978[220] = 0;
   out_3554337354835071978[221] = 0;
   out_3554337354835071978[222] = 0;
   out_3554337354835071978[223] = 0;
   out_3554337354835071978[224] = 0;
   out_3554337354835071978[225] = 0;
   out_3554337354835071978[226] = 0;
   out_3554337354835071978[227] = 0;
   out_3554337354835071978[228] = 0;
   out_3554337354835071978[229] = 0;
   out_3554337354835071978[230] = 0;
   out_3554337354835071978[231] = 0;
   out_3554337354835071978[232] = 0;
   out_3554337354835071978[233] = 0;
   out_3554337354835071978[234] = 0;
   out_3554337354835071978[235] = 0;
   out_3554337354835071978[236] = 0;
   out_3554337354835071978[237] = 0;
   out_3554337354835071978[238] = 0;
   out_3554337354835071978[239] = 0;
   out_3554337354835071978[240] = 0;
   out_3554337354835071978[241] = 1.0;
   out_3554337354835071978[242] = 0;
   out_3554337354835071978[243] = 0;
   out_3554337354835071978[244] = 0;
   out_3554337354835071978[245] = 0;
   out_3554337354835071978[246] = 0;
   out_3554337354835071978[247] = 0;
   out_3554337354835071978[248] = 0;
   out_3554337354835071978[249] = 0;
   out_3554337354835071978[250] = 0;
   out_3554337354835071978[251] = 0;
   out_3554337354835071978[252] = 0;
   out_3554337354835071978[253] = 0;
   out_3554337354835071978[254] = 0;
   out_3554337354835071978[255] = 0;
   out_3554337354835071978[256] = 0;
   out_3554337354835071978[257] = 0;
   out_3554337354835071978[258] = 0;
   out_3554337354835071978[259] = 0;
   out_3554337354835071978[260] = 0;
   out_3554337354835071978[261] = 0;
   out_3554337354835071978[262] = 0;
   out_3554337354835071978[263] = 1.0;
   out_3554337354835071978[264] = 0;
   out_3554337354835071978[265] = 0;
   out_3554337354835071978[266] = 0;
   out_3554337354835071978[267] = 0;
   out_3554337354835071978[268] = 0;
   out_3554337354835071978[269] = 0;
   out_3554337354835071978[270] = 0;
   out_3554337354835071978[271] = 0;
   out_3554337354835071978[272] = 0;
   out_3554337354835071978[273] = 0;
   out_3554337354835071978[274] = 0;
   out_3554337354835071978[275] = 0;
   out_3554337354835071978[276] = 0;
   out_3554337354835071978[277] = 0;
   out_3554337354835071978[278] = 0;
   out_3554337354835071978[279] = 0;
   out_3554337354835071978[280] = 0;
   out_3554337354835071978[281] = 0;
   out_3554337354835071978[282] = 0;
   out_3554337354835071978[283] = 0;
   out_3554337354835071978[284] = 0;
   out_3554337354835071978[285] = 1.0;
   out_3554337354835071978[286] = 0;
   out_3554337354835071978[287] = 0;
   out_3554337354835071978[288] = 0;
   out_3554337354835071978[289] = 0;
   out_3554337354835071978[290] = 0;
   out_3554337354835071978[291] = 0;
   out_3554337354835071978[292] = 0;
   out_3554337354835071978[293] = 0;
   out_3554337354835071978[294] = 0;
   out_3554337354835071978[295] = 0;
   out_3554337354835071978[296] = 0;
   out_3554337354835071978[297] = 0;
   out_3554337354835071978[298] = 0;
   out_3554337354835071978[299] = 0;
   out_3554337354835071978[300] = 0;
   out_3554337354835071978[301] = 0;
   out_3554337354835071978[302] = 0;
   out_3554337354835071978[303] = 0;
   out_3554337354835071978[304] = 0;
   out_3554337354835071978[305] = 0;
   out_3554337354835071978[306] = 0;
   out_3554337354835071978[307] = 1.0;
   out_3554337354835071978[308] = 0;
   out_3554337354835071978[309] = 0;
   out_3554337354835071978[310] = 0;
   out_3554337354835071978[311] = 0;
   out_3554337354835071978[312] = 0;
   out_3554337354835071978[313] = 0;
   out_3554337354835071978[314] = 0;
   out_3554337354835071978[315] = 0;
   out_3554337354835071978[316] = 0;
   out_3554337354835071978[317] = 0;
   out_3554337354835071978[318] = 0;
   out_3554337354835071978[319] = 0;
   out_3554337354835071978[320] = 0;
   out_3554337354835071978[321] = 0;
   out_3554337354835071978[322] = 0;
   out_3554337354835071978[323] = 0;
   out_3554337354835071978[324] = 0;
   out_3554337354835071978[325] = 0;
   out_3554337354835071978[326] = 0;
   out_3554337354835071978[327] = 0;
   out_3554337354835071978[328] = 0;
   out_3554337354835071978[329] = 1.0;
   out_3554337354835071978[330] = 0;
   out_3554337354835071978[331] = 0;
   out_3554337354835071978[332] = 0;
   out_3554337354835071978[333] = 0;
   out_3554337354835071978[334] = 0;
   out_3554337354835071978[335] = 0;
   out_3554337354835071978[336] = 0;
   out_3554337354835071978[337] = 0;
   out_3554337354835071978[338] = 0;
   out_3554337354835071978[339] = 0;
   out_3554337354835071978[340] = 0;
   out_3554337354835071978[341] = 0;
   out_3554337354835071978[342] = 0;
   out_3554337354835071978[343] = 0;
   out_3554337354835071978[344] = 0;
   out_3554337354835071978[345] = 0;
   out_3554337354835071978[346] = 0;
   out_3554337354835071978[347] = 0;
   out_3554337354835071978[348] = 0;
   out_3554337354835071978[349] = 0;
   out_3554337354835071978[350] = 0;
   out_3554337354835071978[351] = 1.0;
   out_3554337354835071978[352] = 0;
   out_3554337354835071978[353] = 0;
   out_3554337354835071978[354] = 0;
   out_3554337354835071978[355] = 0;
   out_3554337354835071978[356] = 0;
   out_3554337354835071978[357] = 0;
   out_3554337354835071978[358] = 0;
   out_3554337354835071978[359] = 0;
   out_3554337354835071978[360] = 0;
   out_3554337354835071978[361] = 0;
   out_3554337354835071978[362] = 0;
   out_3554337354835071978[363] = 0;
   out_3554337354835071978[364] = 0;
   out_3554337354835071978[365] = 0;
   out_3554337354835071978[366] = 0;
   out_3554337354835071978[367] = 0;
   out_3554337354835071978[368] = 0;
   out_3554337354835071978[369] = 0;
   out_3554337354835071978[370] = 0;
   out_3554337354835071978[371] = 0;
   out_3554337354835071978[372] = 0;
   out_3554337354835071978[373] = 1.0;
   out_3554337354835071978[374] = 0;
   out_3554337354835071978[375] = 0;
   out_3554337354835071978[376] = 0;
   out_3554337354835071978[377] = 0;
   out_3554337354835071978[378] = 0;
   out_3554337354835071978[379] = 0;
   out_3554337354835071978[380] = 0;
   out_3554337354835071978[381] = 0;
   out_3554337354835071978[382] = 0;
   out_3554337354835071978[383] = 0;
   out_3554337354835071978[384] = 0;
   out_3554337354835071978[385] = 0;
   out_3554337354835071978[386] = 0;
   out_3554337354835071978[387] = 0;
   out_3554337354835071978[388] = 0;
   out_3554337354835071978[389] = 0;
   out_3554337354835071978[390] = 0;
   out_3554337354835071978[391] = 0;
   out_3554337354835071978[392] = 0;
   out_3554337354835071978[393] = 0;
   out_3554337354835071978[394] = 0;
   out_3554337354835071978[395] = 1.0;
   out_3554337354835071978[396] = 0;
   out_3554337354835071978[397] = 0;
   out_3554337354835071978[398] = 0;
   out_3554337354835071978[399] = 0;
   out_3554337354835071978[400] = 0;
   out_3554337354835071978[401] = 0;
   out_3554337354835071978[402] = 0;
   out_3554337354835071978[403] = 0;
   out_3554337354835071978[404] = 0;
   out_3554337354835071978[405] = 0;
   out_3554337354835071978[406] = 0;
   out_3554337354835071978[407] = 0;
   out_3554337354835071978[408] = 0;
   out_3554337354835071978[409] = 0;
   out_3554337354835071978[410] = 0;
   out_3554337354835071978[411] = 0;
   out_3554337354835071978[412] = 0;
   out_3554337354835071978[413] = 0;
   out_3554337354835071978[414] = 0;
   out_3554337354835071978[415] = 0;
   out_3554337354835071978[416] = 0;
   out_3554337354835071978[417] = 1.0;
   out_3554337354835071978[418] = 0;
   out_3554337354835071978[419] = 0;
   out_3554337354835071978[420] = 0;
   out_3554337354835071978[421] = 0;
   out_3554337354835071978[422] = 0;
   out_3554337354835071978[423] = 0;
   out_3554337354835071978[424] = 0;
   out_3554337354835071978[425] = 0;
   out_3554337354835071978[426] = 0;
   out_3554337354835071978[427] = 0;
   out_3554337354835071978[428] = 0;
   out_3554337354835071978[429] = 0;
   out_3554337354835071978[430] = 0;
   out_3554337354835071978[431] = 0;
   out_3554337354835071978[432] = 0;
   out_3554337354835071978[433] = 0;
   out_3554337354835071978[434] = 0;
   out_3554337354835071978[435] = 0;
   out_3554337354835071978[436] = 0;
   out_3554337354835071978[437] = 0;
   out_3554337354835071978[438] = 0;
   out_3554337354835071978[439] = 1.0;
   out_3554337354835071978[440] = 0;
   out_3554337354835071978[441] = 0;
   out_3554337354835071978[442] = 0;
   out_3554337354835071978[443] = 0;
   out_3554337354835071978[444] = 0;
   out_3554337354835071978[445] = 0;
   out_3554337354835071978[446] = 0;
   out_3554337354835071978[447] = 0;
   out_3554337354835071978[448] = 0;
   out_3554337354835071978[449] = 0;
   out_3554337354835071978[450] = 0;
   out_3554337354835071978[451] = 0;
   out_3554337354835071978[452] = 0;
   out_3554337354835071978[453] = 0;
   out_3554337354835071978[454] = 0;
   out_3554337354835071978[455] = 0;
   out_3554337354835071978[456] = 0;
   out_3554337354835071978[457] = 0;
   out_3554337354835071978[458] = 0;
   out_3554337354835071978[459] = 0;
   out_3554337354835071978[460] = 0;
   out_3554337354835071978[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8072129119001875925) {
   out_8072129119001875925[0] = dt*state[7] + state[0];
   out_8072129119001875925[1] = dt*state[8] + state[1];
   out_8072129119001875925[2] = dt*state[9] + state[2];
   out_8072129119001875925[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8072129119001875925[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8072129119001875925[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8072129119001875925[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8072129119001875925[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8072129119001875925[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8072129119001875925[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8072129119001875925[10] = state[10];
   out_8072129119001875925[11] = state[11];
   out_8072129119001875925[12] = state[12];
   out_8072129119001875925[13] = state[13];
   out_8072129119001875925[14] = state[14];
   out_8072129119001875925[15] = state[15];
   out_8072129119001875925[16] = state[16];
   out_8072129119001875925[17] = state[17];
   out_8072129119001875925[18] = state[18];
   out_8072129119001875925[19] = state[19];
   out_8072129119001875925[20] = state[20];
   out_8072129119001875925[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8922137796898738244) {
   out_8922137796898738244[0] = 1;
   out_8922137796898738244[1] = 0;
   out_8922137796898738244[2] = 0;
   out_8922137796898738244[3] = 0;
   out_8922137796898738244[4] = 0;
   out_8922137796898738244[5] = 0;
   out_8922137796898738244[6] = dt;
   out_8922137796898738244[7] = 0;
   out_8922137796898738244[8] = 0;
   out_8922137796898738244[9] = 0;
   out_8922137796898738244[10] = 0;
   out_8922137796898738244[11] = 0;
   out_8922137796898738244[12] = 0;
   out_8922137796898738244[13] = 0;
   out_8922137796898738244[14] = 0;
   out_8922137796898738244[15] = 0;
   out_8922137796898738244[16] = 0;
   out_8922137796898738244[17] = 0;
   out_8922137796898738244[18] = 0;
   out_8922137796898738244[19] = 0;
   out_8922137796898738244[20] = 0;
   out_8922137796898738244[21] = 0;
   out_8922137796898738244[22] = 1;
   out_8922137796898738244[23] = 0;
   out_8922137796898738244[24] = 0;
   out_8922137796898738244[25] = 0;
   out_8922137796898738244[26] = 0;
   out_8922137796898738244[27] = 0;
   out_8922137796898738244[28] = dt;
   out_8922137796898738244[29] = 0;
   out_8922137796898738244[30] = 0;
   out_8922137796898738244[31] = 0;
   out_8922137796898738244[32] = 0;
   out_8922137796898738244[33] = 0;
   out_8922137796898738244[34] = 0;
   out_8922137796898738244[35] = 0;
   out_8922137796898738244[36] = 0;
   out_8922137796898738244[37] = 0;
   out_8922137796898738244[38] = 0;
   out_8922137796898738244[39] = 0;
   out_8922137796898738244[40] = 0;
   out_8922137796898738244[41] = 0;
   out_8922137796898738244[42] = 0;
   out_8922137796898738244[43] = 0;
   out_8922137796898738244[44] = 1;
   out_8922137796898738244[45] = 0;
   out_8922137796898738244[46] = 0;
   out_8922137796898738244[47] = 0;
   out_8922137796898738244[48] = 0;
   out_8922137796898738244[49] = 0;
   out_8922137796898738244[50] = dt;
   out_8922137796898738244[51] = 0;
   out_8922137796898738244[52] = 0;
   out_8922137796898738244[53] = 0;
   out_8922137796898738244[54] = 0;
   out_8922137796898738244[55] = 0;
   out_8922137796898738244[56] = 0;
   out_8922137796898738244[57] = 0;
   out_8922137796898738244[58] = 0;
   out_8922137796898738244[59] = 0;
   out_8922137796898738244[60] = 0;
   out_8922137796898738244[61] = 0;
   out_8922137796898738244[62] = 0;
   out_8922137796898738244[63] = 0;
   out_8922137796898738244[64] = 0;
   out_8922137796898738244[65] = 0;
   out_8922137796898738244[66] = 1;
   out_8922137796898738244[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8922137796898738244[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8922137796898738244[69] = 0;
   out_8922137796898738244[70] = 0;
   out_8922137796898738244[71] = 0;
   out_8922137796898738244[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8922137796898738244[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8922137796898738244[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8922137796898738244[75] = 0;
   out_8922137796898738244[76] = 0;
   out_8922137796898738244[77] = 0;
   out_8922137796898738244[78] = 0;
   out_8922137796898738244[79] = 0;
   out_8922137796898738244[80] = 0;
   out_8922137796898738244[81] = 0;
   out_8922137796898738244[82] = 0;
   out_8922137796898738244[83] = 0;
   out_8922137796898738244[84] = 0;
   out_8922137796898738244[85] = 0;
   out_8922137796898738244[86] = 0;
   out_8922137796898738244[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8922137796898738244[88] = 1;
   out_8922137796898738244[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8922137796898738244[90] = 0;
   out_8922137796898738244[91] = 0;
   out_8922137796898738244[92] = 0;
   out_8922137796898738244[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8922137796898738244[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8922137796898738244[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8922137796898738244[96] = 0;
   out_8922137796898738244[97] = 0;
   out_8922137796898738244[98] = 0;
   out_8922137796898738244[99] = 0;
   out_8922137796898738244[100] = 0;
   out_8922137796898738244[101] = 0;
   out_8922137796898738244[102] = 0;
   out_8922137796898738244[103] = 0;
   out_8922137796898738244[104] = 0;
   out_8922137796898738244[105] = 0;
   out_8922137796898738244[106] = 0;
   out_8922137796898738244[107] = 0;
   out_8922137796898738244[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8922137796898738244[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8922137796898738244[110] = 1;
   out_8922137796898738244[111] = 0;
   out_8922137796898738244[112] = 0;
   out_8922137796898738244[113] = 0;
   out_8922137796898738244[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8922137796898738244[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8922137796898738244[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8922137796898738244[117] = 0;
   out_8922137796898738244[118] = 0;
   out_8922137796898738244[119] = 0;
   out_8922137796898738244[120] = 0;
   out_8922137796898738244[121] = 0;
   out_8922137796898738244[122] = 0;
   out_8922137796898738244[123] = 0;
   out_8922137796898738244[124] = 0;
   out_8922137796898738244[125] = 0;
   out_8922137796898738244[126] = 0;
   out_8922137796898738244[127] = 0;
   out_8922137796898738244[128] = 0;
   out_8922137796898738244[129] = 0;
   out_8922137796898738244[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8922137796898738244[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8922137796898738244[132] = 1;
   out_8922137796898738244[133] = 0;
   out_8922137796898738244[134] = 0;
   out_8922137796898738244[135] = 0;
   out_8922137796898738244[136] = 0;
   out_8922137796898738244[137] = 0;
   out_8922137796898738244[138] = 0;
   out_8922137796898738244[139] = 0;
   out_8922137796898738244[140] = 0;
   out_8922137796898738244[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8922137796898738244[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8922137796898738244[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8922137796898738244[144] = 0;
   out_8922137796898738244[145] = 0;
   out_8922137796898738244[146] = 0;
   out_8922137796898738244[147] = 0;
   out_8922137796898738244[148] = 0;
   out_8922137796898738244[149] = 0;
   out_8922137796898738244[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8922137796898738244[151] = 0;
   out_8922137796898738244[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8922137796898738244[153] = 0;
   out_8922137796898738244[154] = 1;
   out_8922137796898738244[155] = 0;
   out_8922137796898738244[156] = 0;
   out_8922137796898738244[157] = 0;
   out_8922137796898738244[158] = 0;
   out_8922137796898738244[159] = 0;
   out_8922137796898738244[160] = 0;
   out_8922137796898738244[161] = 0;
   out_8922137796898738244[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8922137796898738244[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8922137796898738244[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8922137796898738244[165] = 0;
   out_8922137796898738244[166] = 0;
   out_8922137796898738244[167] = 0;
   out_8922137796898738244[168] = 0;
   out_8922137796898738244[169] = 0;
   out_8922137796898738244[170] = 0;
   out_8922137796898738244[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8922137796898738244[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8922137796898738244[173] = 0;
   out_8922137796898738244[174] = 0;
   out_8922137796898738244[175] = 0;
   out_8922137796898738244[176] = 1;
   out_8922137796898738244[177] = 0;
   out_8922137796898738244[178] = 0;
   out_8922137796898738244[179] = 0;
   out_8922137796898738244[180] = 0;
   out_8922137796898738244[181] = 0;
   out_8922137796898738244[182] = 0;
   out_8922137796898738244[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8922137796898738244[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8922137796898738244[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8922137796898738244[186] = 0;
   out_8922137796898738244[187] = 0;
   out_8922137796898738244[188] = 0;
   out_8922137796898738244[189] = 0;
   out_8922137796898738244[190] = 0;
   out_8922137796898738244[191] = 0;
   out_8922137796898738244[192] = 0;
   out_8922137796898738244[193] = 0;
   out_8922137796898738244[194] = 0;
   out_8922137796898738244[195] = 0;
   out_8922137796898738244[196] = 0;
   out_8922137796898738244[197] = 0;
   out_8922137796898738244[198] = 1;
   out_8922137796898738244[199] = 0;
   out_8922137796898738244[200] = 0;
   out_8922137796898738244[201] = 0;
   out_8922137796898738244[202] = 0;
   out_8922137796898738244[203] = 0;
   out_8922137796898738244[204] = 0;
   out_8922137796898738244[205] = 0;
   out_8922137796898738244[206] = 0;
   out_8922137796898738244[207] = 0;
   out_8922137796898738244[208] = 0;
   out_8922137796898738244[209] = 0;
   out_8922137796898738244[210] = 0;
   out_8922137796898738244[211] = 0;
   out_8922137796898738244[212] = 0;
   out_8922137796898738244[213] = 0;
   out_8922137796898738244[214] = 0;
   out_8922137796898738244[215] = 0;
   out_8922137796898738244[216] = 0;
   out_8922137796898738244[217] = 0;
   out_8922137796898738244[218] = 0;
   out_8922137796898738244[219] = 0;
   out_8922137796898738244[220] = 1;
   out_8922137796898738244[221] = 0;
   out_8922137796898738244[222] = 0;
   out_8922137796898738244[223] = 0;
   out_8922137796898738244[224] = 0;
   out_8922137796898738244[225] = 0;
   out_8922137796898738244[226] = 0;
   out_8922137796898738244[227] = 0;
   out_8922137796898738244[228] = 0;
   out_8922137796898738244[229] = 0;
   out_8922137796898738244[230] = 0;
   out_8922137796898738244[231] = 0;
   out_8922137796898738244[232] = 0;
   out_8922137796898738244[233] = 0;
   out_8922137796898738244[234] = 0;
   out_8922137796898738244[235] = 0;
   out_8922137796898738244[236] = 0;
   out_8922137796898738244[237] = 0;
   out_8922137796898738244[238] = 0;
   out_8922137796898738244[239] = 0;
   out_8922137796898738244[240] = 0;
   out_8922137796898738244[241] = 0;
   out_8922137796898738244[242] = 1;
   out_8922137796898738244[243] = 0;
   out_8922137796898738244[244] = 0;
   out_8922137796898738244[245] = 0;
   out_8922137796898738244[246] = 0;
   out_8922137796898738244[247] = 0;
   out_8922137796898738244[248] = 0;
   out_8922137796898738244[249] = 0;
   out_8922137796898738244[250] = 0;
   out_8922137796898738244[251] = 0;
   out_8922137796898738244[252] = 0;
   out_8922137796898738244[253] = 0;
   out_8922137796898738244[254] = 0;
   out_8922137796898738244[255] = 0;
   out_8922137796898738244[256] = 0;
   out_8922137796898738244[257] = 0;
   out_8922137796898738244[258] = 0;
   out_8922137796898738244[259] = 0;
   out_8922137796898738244[260] = 0;
   out_8922137796898738244[261] = 0;
   out_8922137796898738244[262] = 0;
   out_8922137796898738244[263] = 0;
   out_8922137796898738244[264] = 1;
   out_8922137796898738244[265] = 0;
   out_8922137796898738244[266] = 0;
   out_8922137796898738244[267] = 0;
   out_8922137796898738244[268] = 0;
   out_8922137796898738244[269] = 0;
   out_8922137796898738244[270] = 0;
   out_8922137796898738244[271] = 0;
   out_8922137796898738244[272] = 0;
   out_8922137796898738244[273] = 0;
   out_8922137796898738244[274] = 0;
   out_8922137796898738244[275] = 0;
   out_8922137796898738244[276] = 0;
   out_8922137796898738244[277] = 0;
   out_8922137796898738244[278] = 0;
   out_8922137796898738244[279] = 0;
   out_8922137796898738244[280] = 0;
   out_8922137796898738244[281] = 0;
   out_8922137796898738244[282] = 0;
   out_8922137796898738244[283] = 0;
   out_8922137796898738244[284] = 0;
   out_8922137796898738244[285] = 0;
   out_8922137796898738244[286] = 1;
   out_8922137796898738244[287] = 0;
   out_8922137796898738244[288] = 0;
   out_8922137796898738244[289] = 0;
   out_8922137796898738244[290] = 0;
   out_8922137796898738244[291] = 0;
   out_8922137796898738244[292] = 0;
   out_8922137796898738244[293] = 0;
   out_8922137796898738244[294] = 0;
   out_8922137796898738244[295] = 0;
   out_8922137796898738244[296] = 0;
   out_8922137796898738244[297] = 0;
   out_8922137796898738244[298] = 0;
   out_8922137796898738244[299] = 0;
   out_8922137796898738244[300] = 0;
   out_8922137796898738244[301] = 0;
   out_8922137796898738244[302] = 0;
   out_8922137796898738244[303] = 0;
   out_8922137796898738244[304] = 0;
   out_8922137796898738244[305] = 0;
   out_8922137796898738244[306] = 0;
   out_8922137796898738244[307] = 0;
   out_8922137796898738244[308] = 1;
   out_8922137796898738244[309] = 0;
   out_8922137796898738244[310] = 0;
   out_8922137796898738244[311] = 0;
   out_8922137796898738244[312] = 0;
   out_8922137796898738244[313] = 0;
   out_8922137796898738244[314] = 0;
   out_8922137796898738244[315] = 0;
   out_8922137796898738244[316] = 0;
   out_8922137796898738244[317] = 0;
   out_8922137796898738244[318] = 0;
   out_8922137796898738244[319] = 0;
   out_8922137796898738244[320] = 0;
   out_8922137796898738244[321] = 0;
   out_8922137796898738244[322] = 0;
   out_8922137796898738244[323] = 0;
   out_8922137796898738244[324] = 0;
   out_8922137796898738244[325] = 0;
   out_8922137796898738244[326] = 0;
   out_8922137796898738244[327] = 0;
   out_8922137796898738244[328] = 0;
   out_8922137796898738244[329] = 0;
   out_8922137796898738244[330] = 1;
   out_8922137796898738244[331] = 0;
   out_8922137796898738244[332] = 0;
   out_8922137796898738244[333] = 0;
   out_8922137796898738244[334] = 0;
   out_8922137796898738244[335] = 0;
   out_8922137796898738244[336] = 0;
   out_8922137796898738244[337] = 0;
   out_8922137796898738244[338] = 0;
   out_8922137796898738244[339] = 0;
   out_8922137796898738244[340] = 0;
   out_8922137796898738244[341] = 0;
   out_8922137796898738244[342] = 0;
   out_8922137796898738244[343] = 0;
   out_8922137796898738244[344] = 0;
   out_8922137796898738244[345] = 0;
   out_8922137796898738244[346] = 0;
   out_8922137796898738244[347] = 0;
   out_8922137796898738244[348] = 0;
   out_8922137796898738244[349] = 0;
   out_8922137796898738244[350] = 0;
   out_8922137796898738244[351] = 0;
   out_8922137796898738244[352] = 1;
   out_8922137796898738244[353] = 0;
   out_8922137796898738244[354] = 0;
   out_8922137796898738244[355] = 0;
   out_8922137796898738244[356] = 0;
   out_8922137796898738244[357] = 0;
   out_8922137796898738244[358] = 0;
   out_8922137796898738244[359] = 0;
   out_8922137796898738244[360] = 0;
   out_8922137796898738244[361] = 0;
   out_8922137796898738244[362] = 0;
   out_8922137796898738244[363] = 0;
   out_8922137796898738244[364] = 0;
   out_8922137796898738244[365] = 0;
   out_8922137796898738244[366] = 0;
   out_8922137796898738244[367] = 0;
   out_8922137796898738244[368] = 0;
   out_8922137796898738244[369] = 0;
   out_8922137796898738244[370] = 0;
   out_8922137796898738244[371] = 0;
   out_8922137796898738244[372] = 0;
   out_8922137796898738244[373] = 0;
   out_8922137796898738244[374] = 1;
   out_8922137796898738244[375] = 0;
   out_8922137796898738244[376] = 0;
   out_8922137796898738244[377] = 0;
   out_8922137796898738244[378] = 0;
   out_8922137796898738244[379] = 0;
   out_8922137796898738244[380] = 0;
   out_8922137796898738244[381] = 0;
   out_8922137796898738244[382] = 0;
   out_8922137796898738244[383] = 0;
   out_8922137796898738244[384] = 0;
   out_8922137796898738244[385] = 0;
   out_8922137796898738244[386] = 0;
   out_8922137796898738244[387] = 0;
   out_8922137796898738244[388] = 0;
   out_8922137796898738244[389] = 0;
   out_8922137796898738244[390] = 0;
   out_8922137796898738244[391] = 0;
   out_8922137796898738244[392] = 0;
   out_8922137796898738244[393] = 0;
   out_8922137796898738244[394] = 0;
   out_8922137796898738244[395] = 0;
   out_8922137796898738244[396] = 1;
   out_8922137796898738244[397] = 0;
   out_8922137796898738244[398] = 0;
   out_8922137796898738244[399] = 0;
   out_8922137796898738244[400] = 0;
   out_8922137796898738244[401] = 0;
   out_8922137796898738244[402] = 0;
   out_8922137796898738244[403] = 0;
   out_8922137796898738244[404] = 0;
   out_8922137796898738244[405] = 0;
   out_8922137796898738244[406] = 0;
   out_8922137796898738244[407] = 0;
   out_8922137796898738244[408] = 0;
   out_8922137796898738244[409] = 0;
   out_8922137796898738244[410] = 0;
   out_8922137796898738244[411] = 0;
   out_8922137796898738244[412] = 0;
   out_8922137796898738244[413] = 0;
   out_8922137796898738244[414] = 0;
   out_8922137796898738244[415] = 0;
   out_8922137796898738244[416] = 0;
   out_8922137796898738244[417] = 0;
   out_8922137796898738244[418] = 1;
   out_8922137796898738244[419] = 0;
   out_8922137796898738244[420] = 0;
   out_8922137796898738244[421] = 0;
   out_8922137796898738244[422] = 0;
   out_8922137796898738244[423] = 0;
   out_8922137796898738244[424] = 0;
   out_8922137796898738244[425] = 0;
   out_8922137796898738244[426] = 0;
   out_8922137796898738244[427] = 0;
   out_8922137796898738244[428] = 0;
   out_8922137796898738244[429] = 0;
   out_8922137796898738244[430] = 0;
   out_8922137796898738244[431] = 0;
   out_8922137796898738244[432] = 0;
   out_8922137796898738244[433] = 0;
   out_8922137796898738244[434] = 0;
   out_8922137796898738244[435] = 0;
   out_8922137796898738244[436] = 0;
   out_8922137796898738244[437] = 0;
   out_8922137796898738244[438] = 0;
   out_8922137796898738244[439] = 0;
   out_8922137796898738244[440] = 1;
}
void h_4(double *state, double *unused, double *out_5764221680073741306) {
   out_5764221680073741306[0] = state[10] + state[13];
   out_5764221680073741306[1] = state[11] + state[14];
   out_5764221680073741306[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8699886012221389646) {
   out_8699886012221389646[0] = 0;
   out_8699886012221389646[1] = 0;
   out_8699886012221389646[2] = 0;
   out_8699886012221389646[3] = 0;
   out_8699886012221389646[4] = 0;
   out_8699886012221389646[5] = 0;
   out_8699886012221389646[6] = 0;
   out_8699886012221389646[7] = 0;
   out_8699886012221389646[8] = 0;
   out_8699886012221389646[9] = 0;
   out_8699886012221389646[10] = 1;
   out_8699886012221389646[11] = 0;
   out_8699886012221389646[12] = 0;
   out_8699886012221389646[13] = 1;
   out_8699886012221389646[14] = 0;
   out_8699886012221389646[15] = 0;
   out_8699886012221389646[16] = 0;
   out_8699886012221389646[17] = 0;
   out_8699886012221389646[18] = 0;
   out_8699886012221389646[19] = 0;
   out_8699886012221389646[20] = 0;
   out_8699886012221389646[21] = 0;
   out_8699886012221389646[22] = 0;
   out_8699886012221389646[23] = 0;
   out_8699886012221389646[24] = 0;
   out_8699886012221389646[25] = 0;
   out_8699886012221389646[26] = 0;
   out_8699886012221389646[27] = 0;
   out_8699886012221389646[28] = 0;
   out_8699886012221389646[29] = 0;
   out_8699886012221389646[30] = 0;
   out_8699886012221389646[31] = 0;
   out_8699886012221389646[32] = 0;
   out_8699886012221389646[33] = 1;
   out_8699886012221389646[34] = 0;
   out_8699886012221389646[35] = 0;
   out_8699886012221389646[36] = 1;
   out_8699886012221389646[37] = 0;
   out_8699886012221389646[38] = 0;
   out_8699886012221389646[39] = 0;
   out_8699886012221389646[40] = 0;
   out_8699886012221389646[41] = 0;
   out_8699886012221389646[42] = 0;
   out_8699886012221389646[43] = 0;
   out_8699886012221389646[44] = 0;
   out_8699886012221389646[45] = 0;
   out_8699886012221389646[46] = 0;
   out_8699886012221389646[47] = 0;
   out_8699886012221389646[48] = 0;
   out_8699886012221389646[49] = 0;
   out_8699886012221389646[50] = 0;
   out_8699886012221389646[51] = 0;
   out_8699886012221389646[52] = 0;
   out_8699886012221389646[53] = 0;
   out_8699886012221389646[54] = 0;
   out_8699886012221389646[55] = 0;
   out_8699886012221389646[56] = 1;
   out_8699886012221389646[57] = 0;
   out_8699886012221389646[58] = 0;
   out_8699886012221389646[59] = 1;
   out_8699886012221389646[60] = 0;
   out_8699886012221389646[61] = 0;
   out_8699886012221389646[62] = 0;
   out_8699886012221389646[63] = 0;
   out_8699886012221389646[64] = 0;
   out_8699886012221389646[65] = 0;
}
void h_9(double *state, double *unused, double *out_4037350409543272207) {
   out_4037350409543272207[0] = state[10];
   out_4037350409543272207[1] = state[11];
   out_4037350409543272207[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8458696365591799001) {
   out_8458696365591799001[0] = 0;
   out_8458696365591799001[1] = 0;
   out_8458696365591799001[2] = 0;
   out_8458696365591799001[3] = 0;
   out_8458696365591799001[4] = 0;
   out_8458696365591799001[5] = 0;
   out_8458696365591799001[6] = 0;
   out_8458696365591799001[7] = 0;
   out_8458696365591799001[8] = 0;
   out_8458696365591799001[9] = 0;
   out_8458696365591799001[10] = 1;
   out_8458696365591799001[11] = 0;
   out_8458696365591799001[12] = 0;
   out_8458696365591799001[13] = 0;
   out_8458696365591799001[14] = 0;
   out_8458696365591799001[15] = 0;
   out_8458696365591799001[16] = 0;
   out_8458696365591799001[17] = 0;
   out_8458696365591799001[18] = 0;
   out_8458696365591799001[19] = 0;
   out_8458696365591799001[20] = 0;
   out_8458696365591799001[21] = 0;
   out_8458696365591799001[22] = 0;
   out_8458696365591799001[23] = 0;
   out_8458696365591799001[24] = 0;
   out_8458696365591799001[25] = 0;
   out_8458696365591799001[26] = 0;
   out_8458696365591799001[27] = 0;
   out_8458696365591799001[28] = 0;
   out_8458696365591799001[29] = 0;
   out_8458696365591799001[30] = 0;
   out_8458696365591799001[31] = 0;
   out_8458696365591799001[32] = 0;
   out_8458696365591799001[33] = 1;
   out_8458696365591799001[34] = 0;
   out_8458696365591799001[35] = 0;
   out_8458696365591799001[36] = 0;
   out_8458696365591799001[37] = 0;
   out_8458696365591799001[38] = 0;
   out_8458696365591799001[39] = 0;
   out_8458696365591799001[40] = 0;
   out_8458696365591799001[41] = 0;
   out_8458696365591799001[42] = 0;
   out_8458696365591799001[43] = 0;
   out_8458696365591799001[44] = 0;
   out_8458696365591799001[45] = 0;
   out_8458696365591799001[46] = 0;
   out_8458696365591799001[47] = 0;
   out_8458696365591799001[48] = 0;
   out_8458696365591799001[49] = 0;
   out_8458696365591799001[50] = 0;
   out_8458696365591799001[51] = 0;
   out_8458696365591799001[52] = 0;
   out_8458696365591799001[53] = 0;
   out_8458696365591799001[54] = 0;
   out_8458696365591799001[55] = 0;
   out_8458696365591799001[56] = 1;
   out_8458696365591799001[57] = 0;
   out_8458696365591799001[58] = 0;
   out_8458696365591799001[59] = 0;
   out_8458696365591799001[60] = 0;
   out_8458696365591799001[61] = 0;
   out_8458696365591799001[62] = 0;
   out_8458696365591799001[63] = 0;
   out_8458696365591799001[64] = 0;
   out_8458696365591799001[65] = 0;
}
void h_10(double *state, double *unused, double *out_1866788582643306631) {
   out_1866788582643306631[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1866788582643306631[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1866788582643306631[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6599771279639068883) {
   out_6599771279639068883[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6599771279639068883[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6599771279639068883[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6599771279639068883[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6599771279639068883[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6599771279639068883[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6599771279639068883[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6599771279639068883[7] = 0;
   out_6599771279639068883[8] = 0;
   out_6599771279639068883[9] = 0;
   out_6599771279639068883[10] = 0;
   out_6599771279639068883[11] = 0;
   out_6599771279639068883[12] = 0;
   out_6599771279639068883[13] = 0;
   out_6599771279639068883[14] = 0;
   out_6599771279639068883[15] = 0;
   out_6599771279639068883[16] = 1;
   out_6599771279639068883[17] = 0;
   out_6599771279639068883[18] = 0;
   out_6599771279639068883[19] = 1;
   out_6599771279639068883[20] = 0;
   out_6599771279639068883[21] = 0;
   out_6599771279639068883[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6599771279639068883[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6599771279639068883[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6599771279639068883[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6599771279639068883[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6599771279639068883[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6599771279639068883[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6599771279639068883[29] = 0;
   out_6599771279639068883[30] = 0;
   out_6599771279639068883[31] = 0;
   out_6599771279639068883[32] = 0;
   out_6599771279639068883[33] = 0;
   out_6599771279639068883[34] = 0;
   out_6599771279639068883[35] = 0;
   out_6599771279639068883[36] = 0;
   out_6599771279639068883[37] = 0;
   out_6599771279639068883[38] = 0;
   out_6599771279639068883[39] = 1;
   out_6599771279639068883[40] = 0;
   out_6599771279639068883[41] = 0;
   out_6599771279639068883[42] = 1;
   out_6599771279639068883[43] = 0;
   out_6599771279639068883[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6599771279639068883[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6599771279639068883[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6599771279639068883[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6599771279639068883[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6599771279639068883[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6599771279639068883[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6599771279639068883[51] = 0;
   out_6599771279639068883[52] = 0;
   out_6599771279639068883[53] = 0;
   out_6599771279639068883[54] = 0;
   out_6599771279639068883[55] = 0;
   out_6599771279639068883[56] = 0;
   out_6599771279639068883[57] = 0;
   out_6599771279639068883[58] = 0;
   out_6599771279639068883[59] = 0;
   out_6599771279639068883[60] = 0;
   out_6599771279639068883[61] = 0;
   out_6599771279639068883[62] = 1;
   out_6599771279639068883[63] = 0;
   out_6599771279639068883[64] = 0;
   out_6599771279639068883[65] = 1;
}
void h_12(double *state, double *unused, double *out_7215564058970746752) {
   out_7215564058970746752[0] = state[0];
   out_7215564058970746752[1] = state[1];
   out_7215564058970746752[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8078786987173795979) {
   out_8078786987173795979[0] = 1;
   out_8078786987173795979[1] = 0;
   out_8078786987173795979[2] = 0;
   out_8078786987173795979[3] = 0;
   out_8078786987173795979[4] = 0;
   out_8078786987173795979[5] = 0;
   out_8078786987173795979[6] = 0;
   out_8078786987173795979[7] = 0;
   out_8078786987173795979[8] = 0;
   out_8078786987173795979[9] = 0;
   out_8078786987173795979[10] = 0;
   out_8078786987173795979[11] = 0;
   out_8078786987173795979[12] = 0;
   out_8078786987173795979[13] = 0;
   out_8078786987173795979[14] = 0;
   out_8078786987173795979[15] = 0;
   out_8078786987173795979[16] = 0;
   out_8078786987173795979[17] = 0;
   out_8078786987173795979[18] = 0;
   out_8078786987173795979[19] = 0;
   out_8078786987173795979[20] = 0;
   out_8078786987173795979[21] = 0;
   out_8078786987173795979[22] = 0;
   out_8078786987173795979[23] = 1;
   out_8078786987173795979[24] = 0;
   out_8078786987173795979[25] = 0;
   out_8078786987173795979[26] = 0;
   out_8078786987173795979[27] = 0;
   out_8078786987173795979[28] = 0;
   out_8078786987173795979[29] = 0;
   out_8078786987173795979[30] = 0;
   out_8078786987173795979[31] = 0;
   out_8078786987173795979[32] = 0;
   out_8078786987173795979[33] = 0;
   out_8078786987173795979[34] = 0;
   out_8078786987173795979[35] = 0;
   out_8078786987173795979[36] = 0;
   out_8078786987173795979[37] = 0;
   out_8078786987173795979[38] = 0;
   out_8078786987173795979[39] = 0;
   out_8078786987173795979[40] = 0;
   out_8078786987173795979[41] = 0;
   out_8078786987173795979[42] = 0;
   out_8078786987173795979[43] = 0;
   out_8078786987173795979[44] = 0;
   out_8078786987173795979[45] = 0;
   out_8078786987173795979[46] = 1;
   out_8078786987173795979[47] = 0;
   out_8078786987173795979[48] = 0;
   out_8078786987173795979[49] = 0;
   out_8078786987173795979[50] = 0;
   out_8078786987173795979[51] = 0;
   out_8078786987173795979[52] = 0;
   out_8078786987173795979[53] = 0;
   out_8078786987173795979[54] = 0;
   out_8078786987173795979[55] = 0;
   out_8078786987173795979[56] = 0;
   out_8078786987173795979[57] = 0;
   out_8078786987173795979[58] = 0;
   out_8078786987173795979[59] = 0;
   out_8078786987173795979[60] = 0;
   out_8078786987173795979[61] = 0;
   out_8078786987173795979[62] = 0;
   out_8078786987173795979[63] = 0;
   out_8078786987173795979[64] = 0;
   out_8078786987173795979[65] = 0;
}
void h_35(double *state, double *unused, double *out_8023320980266321701) {
   out_8023320980266321701[0] = state[7];
   out_8023320980266321701[1] = state[8];
   out_8023320980266321701[2] = state[9];
}
void H_35(double *state, double *unused, double *out_5333223954848782270) {
   out_5333223954848782270[0] = 0;
   out_5333223954848782270[1] = 0;
   out_5333223954848782270[2] = 0;
   out_5333223954848782270[3] = 0;
   out_5333223954848782270[4] = 0;
   out_5333223954848782270[5] = 0;
   out_5333223954848782270[6] = 0;
   out_5333223954848782270[7] = 1;
   out_5333223954848782270[8] = 0;
   out_5333223954848782270[9] = 0;
   out_5333223954848782270[10] = 0;
   out_5333223954848782270[11] = 0;
   out_5333223954848782270[12] = 0;
   out_5333223954848782270[13] = 0;
   out_5333223954848782270[14] = 0;
   out_5333223954848782270[15] = 0;
   out_5333223954848782270[16] = 0;
   out_5333223954848782270[17] = 0;
   out_5333223954848782270[18] = 0;
   out_5333223954848782270[19] = 0;
   out_5333223954848782270[20] = 0;
   out_5333223954848782270[21] = 0;
   out_5333223954848782270[22] = 0;
   out_5333223954848782270[23] = 0;
   out_5333223954848782270[24] = 0;
   out_5333223954848782270[25] = 0;
   out_5333223954848782270[26] = 0;
   out_5333223954848782270[27] = 0;
   out_5333223954848782270[28] = 0;
   out_5333223954848782270[29] = 0;
   out_5333223954848782270[30] = 1;
   out_5333223954848782270[31] = 0;
   out_5333223954848782270[32] = 0;
   out_5333223954848782270[33] = 0;
   out_5333223954848782270[34] = 0;
   out_5333223954848782270[35] = 0;
   out_5333223954848782270[36] = 0;
   out_5333223954848782270[37] = 0;
   out_5333223954848782270[38] = 0;
   out_5333223954848782270[39] = 0;
   out_5333223954848782270[40] = 0;
   out_5333223954848782270[41] = 0;
   out_5333223954848782270[42] = 0;
   out_5333223954848782270[43] = 0;
   out_5333223954848782270[44] = 0;
   out_5333223954848782270[45] = 0;
   out_5333223954848782270[46] = 0;
   out_5333223954848782270[47] = 0;
   out_5333223954848782270[48] = 0;
   out_5333223954848782270[49] = 0;
   out_5333223954848782270[50] = 0;
   out_5333223954848782270[51] = 0;
   out_5333223954848782270[52] = 0;
   out_5333223954848782270[53] = 1;
   out_5333223954848782270[54] = 0;
   out_5333223954848782270[55] = 0;
   out_5333223954848782270[56] = 0;
   out_5333223954848782270[57] = 0;
   out_5333223954848782270[58] = 0;
   out_5333223954848782270[59] = 0;
   out_5333223954848782270[60] = 0;
   out_5333223954848782270[61] = 0;
   out_5333223954848782270[62] = 0;
   out_5333223954848782270[63] = 0;
   out_5333223954848782270[64] = 0;
   out_5333223954848782270[65] = 0;
}
void h_32(double *state, double *unused, double *out_1620715106595382419) {
   out_1620715106595382419[0] = state[3];
   out_1620715106595382419[1] = state[4];
   out_1620715106595382419[2] = state[5];
   out_1620715106595382419[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2628199441947032333) {
   out_2628199441947032333[0] = 0;
   out_2628199441947032333[1] = 0;
   out_2628199441947032333[2] = 0;
   out_2628199441947032333[3] = 1;
   out_2628199441947032333[4] = 0;
   out_2628199441947032333[5] = 0;
   out_2628199441947032333[6] = 0;
   out_2628199441947032333[7] = 0;
   out_2628199441947032333[8] = 0;
   out_2628199441947032333[9] = 0;
   out_2628199441947032333[10] = 0;
   out_2628199441947032333[11] = 0;
   out_2628199441947032333[12] = 0;
   out_2628199441947032333[13] = 0;
   out_2628199441947032333[14] = 0;
   out_2628199441947032333[15] = 0;
   out_2628199441947032333[16] = 0;
   out_2628199441947032333[17] = 0;
   out_2628199441947032333[18] = 0;
   out_2628199441947032333[19] = 0;
   out_2628199441947032333[20] = 0;
   out_2628199441947032333[21] = 0;
   out_2628199441947032333[22] = 0;
   out_2628199441947032333[23] = 0;
   out_2628199441947032333[24] = 0;
   out_2628199441947032333[25] = 0;
   out_2628199441947032333[26] = 1;
   out_2628199441947032333[27] = 0;
   out_2628199441947032333[28] = 0;
   out_2628199441947032333[29] = 0;
   out_2628199441947032333[30] = 0;
   out_2628199441947032333[31] = 0;
   out_2628199441947032333[32] = 0;
   out_2628199441947032333[33] = 0;
   out_2628199441947032333[34] = 0;
   out_2628199441947032333[35] = 0;
   out_2628199441947032333[36] = 0;
   out_2628199441947032333[37] = 0;
   out_2628199441947032333[38] = 0;
   out_2628199441947032333[39] = 0;
   out_2628199441947032333[40] = 0;
   out_2628199441947032333[41] = 0;
   out_2628199441947032333[42] = 0;
   out_2628199441947032333[43] = 0;
   out_2628199441947032333[44] = 0;
   out_2628199441947032333[45] = 0;
   out_2628199441947032333[46] = 0;
   out_2628199441947032333[47] = 0;
   out_2628199441947032333[48] = 0;
   out_2628199441947032333[49] = 1;
   out_2628199441947032333[50] = 0;
   out_2628199441947032333[51] = 0;
   out_2628199441947032333[52] = 0;
   out_2628199441947032333[53] = 0;
   out_2628199441947032333[54] = 0;
   out_2628199441947032333[55] = 0;
   out_2628199441947032333[56] = 0;
   out_2628199441947032333[57] = 0;
   out_2628199441947032333[58] = 0;
   out_2628199441947032333[59] = 0;
   out_2628199441947032333[60] = 0;
   out_2628199441947032333[61] = 0;
   out_2628199441947032333[62] = 0;
   out_2628199441947032333[63] = 0;
   out_2628199441947032333[64] = 0;
   out_2628199441947032333[65] = 0;
   out_2628199441947032333[66] = 0;
   out_2628199441947032333[67] = 0;
   out_2628199441947032333[68] = 0;
   out_2628199441947032333[69] = 0;
   out_2628199441947032333[70] = 0;
   out_2628199441947032333[71] = 0;
   out_2628199441947032333[72] = 1;
   out_2628199441947032333[73] = 0;
   out_2628199441947032333[74] = 0;
   out_2628199441947032333[75] = 0;
   out_2628199441947032333[76] = 0;
   out_2628199441947032333[77] = 0;
   out_2628199441947032333[78] = 0;
   out_2628199441947032333[79] = 0;
   out_2628199441947032333[80] = 0;
   out_2628199441947032333[81] = 0;
   out_2628199441947032333[82] = 0;
   out_2628199441947032333[83] = 0;
   out_2628199441947032333[84] = 0;
   out_2628199441947032333[85] = 0;
   out_2628199441947032333[86] = 0;
   out_2628199441947032333[87] = 0;
}
void h_13(double *state, double *unused, double *out_5208451031767510303) {
   out_5208451031767510303[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5208451031767510303[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5208451031767510303[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4622461517911340855) {
   out_4622461517911340855[0] = 0;
   out_4622461517911340855[1] = 0;
   out_4622461517911340855[2] = 0;
   out_4622461517911340855[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4622461517911340855[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4622461517911340855[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4622461517911340855[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4622461517911340855[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4622461517911340855[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4622461517911340855[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4622461517911340855[10] = 0;
   out_4622461517911340855[11] = 0;
   out_4622461517911340855[12] = 0;
   out_4622461517911340855[13] = 0;
   out_4622461517911340855[14] = 0;
   out_4622461517911340855[15] = 0;
   out_4622461517911340855[16] = 0;
   out_4622461517911340855[17] = 0;
   out_4622461517911340855[18] = 0;
   out_4622461517911340855[19] = 0;
   out_4622461517911340855[20] = 0;
   out_4622461517911340855[21] = 0;
   out_4622461517911340855[22] = 0;
   out_4622461517911340855[23] = 0;
   out_4622461517911340855[24] = 0;
   out_4622461517911340855[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4622461517911340855[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4622461517911340855[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4622461517911340855[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4622461517911340855[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4622461517911340855[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4622461517911340855[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4622461517911340855[32] = 0;
   out_4622461517911340855[33] = 0;
   out_4622461517911340855[34] = 0;
   out_4622461517911340855[35] = 0;
   out_4622461517911340855[36] = 0;
   out_4622461517911340855[37] = 0;
   out_4622461517911340855[38] = 0;
   out_4622461517911340855[39] = 0;
   out_4622461517911340855[40] = 0;
   out_4622461517911340855[41] = 0;
   out_4622461517911340855[42] = 0;
   out_4622461517911340855[43] = 0;
   out_4622461517911340855[44] = 0;
   out_4622461517911340855[45] = 0;
   out_4622461517911340855[46] = 0;
   out_4622461517911340855[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4622461517911340855[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4622461517911340855[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4622461517911340855[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4622461517911340855[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4622461517911340855[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4622461517911340855[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4622461517911340855[54] = 0;
   out_4622461517911340855[55] = 0;
   out_4622461517911340855[56] = 0;
   out_4622461517911340855[57] = 0;
   out_4622461517911340855[58] = 0;
   out_4622461517911340855[59] = 0;
   out_4622461517911340855[60] = 0;
   out_4622461517911340855[61] = 0;
   out_4622461517911340855[62] = 0;
   out_4622461517911340855[63] = 0;
   out_4622461517911340855[64] = 0;
   out_4622461517911340855[65] = 0;
}
void h_14(double *state, double *unused, double *out_4037350409543272207) {
   out_4037350409543272207[0] = state[10];
   out_4037350409543272207[1] = state[11];
   out_4037350409543272207[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8458696365591799001) {
   out_8458696365591799001[0] = 0;
   out_8458696365591799001[1] = 0;
   out_8458696365591799001[2] = 0;
   out_8458696365591799001[3] = 0;
   out_8458696365591799001[4] = 0;
   out_8458696365591799001[5] = 0;
   out_8458696365591799001[6] = 0;
   out_8458696365591799001[7] = 0;
   out_8458696365591799001[8] = 0;
   out_8458696365591799001[9] = 0;
   out_8458696365591799001[10] = 1;
   out_8458696365591799001[11] = 0;
   out_8458696365591799001[12] = 0;
   out_8458696365591799001[13] = 0;
   out_8458696365591799001[14] = 0;
   out_8458696365591799001[15] = 0;
   out_8458696365591799001[16] = 0;
   out_8458696365591799001[17] = 0;
   out_8458696365591799001[18] = 0;
   out_8458696365591799001[19] = 0;
   out_8458696365591799001[20] = 0;
   out_8458696365591799001[21] = 0;
   out_8458696365591799001[22] = 0;
   out_8458696365591799001[23] = 0;
   out_8458696365591799001[24] = 0;
   out_8458696365591799001[25] = 0;
   out_8458696365591799001[26] = 0;
   out_8458696365591799001[27] = 0;
   out_8458696365591799001[28] = 0;
   out_8458696365591799001[29] = 0;
   out_8458696365591799001[30] = 0;
   out_8458696365591799001[31] = 0;
   out_8458696365591799001[32] = 0;
   out_8458696365591799001[33] = 1;
   out_8458696365591799001[34] = 0;
   out_8458696365591799001[35] = 0;
   out_8458696365591799001[36] = 0;
   out_8458696365591799001[37] = 0;
   out_8458696365591799001[38] = 0;
   out_8458696365591799001[39] = 0;
   out_8458696365591799001[40] = 0;
   out_8458696365591799001[41] = 0;
   out_8458696365591799001[42] = 0;
   out_8458696365591799001[43] = 0;
   out_8458696365591799001[44] = 0;
   out_8458696365591799001[45] = 0;
   out_8458696365591799001[46] = 0;
   out_8458696365591799001[47] = 0;
   out_8458696365591799001[48] = 0;
   out_8458696365591799001[49] = 0;
   out_8458696365591799001[50] = 0;
   out_8458696365591799001[51] = 0;
   out_8458696365591799001[52] = 0;
   out_8458696365591799001[53] = 0;
   out_8458696365591799001[54] = 0;
   out_8458696365591799001[55] = 0;
   out_8458696365591799001[56] = 1;
   out_8458696365591799001[57] = 0;
   out_8458696365591799001[58] = 0;
   out_8458696365591799001[59] = 0;
   out_8458696365591799001[60] = 0;
   out_8458696365591799001[61] = 0;
   out_8458696365591799001[62] = 0;
   out_8458696365591799001[63] = 0;
   out_8458696365591799001[64] = 0;
   out_8458696365591799001[65] = 0;
}
void h_33(double *state, double *unused, double *out_3196664996622667359) {
   out_3196664996622667359[0] = state[16];
   out_3196664996622667359[1] = state[17];
   out_3196664996622667359[2] = state[18];
}
void H_33(double *state, double *unused, double *out_2182666950209924666) {
   out_2182666950209924666[0] = 0;
   out_2182666950209924666[1] = 0;
   out_2182666950209924666[2] = 0;
   out_2182666950209924666[3] = 0;
   out_2182666950209924666[4] = 0;
   out_2182666950209924666[5] = 0;
   out_2182666950209924666[6] = 0;
   out_2182666950209924666[7] = 0;
   out_2182666950209924666[8] = 0;
   out_2182666950209924666[9] = 0;
   out_2182666950209924666[10] = 0;
   out_2182666950209924666[11] = 0;
   out_2182666950209924666[12] = 0;
   out_2182666950209924666[13] = 0;
   out_2182666950209924666[14] = 0;
   out_2182666950209924666[15] = 0;
   out_2182666950209924666[16] = 1;
   out_2182666950209924666[17] = 0;
   out_2182666950209924666[18] = 0;
   out_2182666950209924666[19] = 0;
   out_2182666950209924666[20] = 0;
   out_2182666950209924666[21] = 0;
   out_2182666950209924666[22] = 0;
   out_2182666950209924666[23] = 0;
   out_2182666950209924666[24] = 0;
   out_2182666950209924666[25] = 0;
   out_2182666950209924666[26] = 0;
   out_2182666950209924666[27] = 0;
   out_2182666950209924666[28] = 0;
   out_2182666950209924666[29] = 0;
   out_2182666950209924666[30] = 0;
   out_2182666950209924666[31] = 0;
   out_2182666950209924666[32] = 0;
   out_2182666950209924666[33] = 0;
   out_2182666950209924666[34] = 0;
   out_2182666950209924666[35] = 0;
   out_2182666950209924666[36] = 0;
   out_2182666950209924666[37] = 0;
   out_2182666950209924666[38] = 0;
   out_2182666950209924666[39] = 1;
   out_2182666950209924666[40] = 0;
   out_2182666950209924666[41] = 0;
   out_2182666950209924666[42] = 0;
   out_2182666950209924666[43] = 0;
   out_2182666950209924666[44] = 0;
   out_2182666950209924666[45] = 0;
   out_2182666950209924666[46] = 0;
   out_2182666950209924666[47] = 0;
   out_2182666950209924666[48] = 0;
   out_2182666950209924666[49] = 0;
   out_2182666950209924666[50] = 0;
   out_2182666950209924666[51] = 0;
   out_2182666950209924666[52] = 0;
   out_2182666950209924666[53] = 0;
   out_2182666950209924666[54] = 0;
   out_2182666950209924666[55] = 0;
   out_2182666950209924666[56] = 0;
   out_2182666950209924666[57] = 0;
   out_2182666950209924666[58] = 0;
   out_2182666950209924666[59] = 0;
   out_2182666950209924666[60] = 0;
   out_2182666950209924666[61] = 0;
   out_2182666950209924666[62] = 1;
   out_2182666950209924666[63] = 0;
   out_2182666950209924666[64] = 0;
   out_2182666950209924666[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8093280458722028871) {
  H(in_vec, out_8093280458722028871);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2329582857333837057) {
  err_fun(nom_x, delta_x, out_2329582857333837057);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4575116125226568338) {
  inv_err_fun(nom_x, true_x, out_4575116125226568338);
}
void live_H_mod_fun(double *state, double *out_3554337354835071978) {
  H_mod_fun(state, out_3554337354835071978);
}
void live_f_fun(double *state, double dt, double *out_8072129119001875925) {
  f_fun(state,  dt, out_8072129119001875925);
}
void live_F_fun(double *state, double dt, double *out_8922137796898738244) {
  F_fun(state,  dt, out_8922137796898738244);
}
void live_h_4(double *state, double *unused, double *out_5764221680073741306) {
  h_4(state, unused, out_5764221680073741306);
}
void live_H_4(double *state, double *unused, double *out_8699886012221389646) {
  H_4(state, unused, out_8699886012221389646);
}
void live_h_9(double *state, double *unused, double *out_4037350409543272207) {
  h_9(state, unused, out_4037350409543272207);
}
void live_H_9(double *state, double *unused, double *out_8458696365591799001) {
  H_9(state, unused, out_8458696365591799001);
}
void live_h_10(double *state, double *unused, double *out_1866788582643306631) {
  h_10(state, unused, out_1866788582643306631);
}
void live_H_10(double *state, double *unused, double *out_6599771279639068883) {
  H_10(state, unused, out_6599771279639068883);
}
void live_h_12(double *state, double *unused, double *out_7215564058970746752) {
  h_12(state, unused, out_7215564058970746752);
}
void live_H_12(double *state, double *unused, double *out_8078786987173795979) {
  H_12(state, unused, out_8078786987173795979);
}
void live_h_35(double *state, double *unused, double *out_8023320980266321701) {
  h_35(state, unused, out_8023320980266321701);
}
void live_H_35(double *state, double *unused, double *out_5333223954848782270) {
  H_35(state, unused, out_5333223954848782270);
}
void live_h_32(double *state, double *unused, double *out_1620715106595382419) {
  h_32(state, unused, out_1620715106595382419);
}
void live_H_32(double *state, double *unused, double *out_2628199441947032333) {
  H_32(state, unused, out_2628199441947032333);
}
void live_h_13(double *state, double *unused, double *out_5208451031767510303) {
  h_13(state, unused, out_5208451031767510303);
}
void live_H_13(double *state, double *unused, double *out_4622461517911340855) {
  H_13(state, unused, out_4622461517911340855);
}
void live_h_14(double *state, double *unused, double *out_4037350409543272207) {
  h_14(state, unused, out_4037350409543272207);
}
void live_H_14(double *state, double *unused, double *out_8458696365591799001) {
  H_14(state, unused, out_8458696365591799001);
}
void live_h_33(double *state, double *unused, double *out_3196664996622667359) {
  h_33(state, unused, out_3196664996622667359);
}
void live_H_33(double *state, double *unused, double *out_2182666950209924666) {
  H_33(state, unused, out_2182666950209924666);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
